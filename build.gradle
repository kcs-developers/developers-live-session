plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.developers.liveSession'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    all {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging' // 중복 sl4j2 오류 해결

    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    // 로깅 처리
    implementation 'org.springframework.boot:spring-boot-starter-log4j2' // loging을 위한 디펜던시; 기본 logback 삭제
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.3' //dataformat 처리


    // redis 의존성 추가
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    // 오류 해결
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // 테스트 코드 추가
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.testcontainers:junit-jupiter:1.16.3'
    testImplementation 'it.ozimov:embedded-redis:0.7.3'// embeded-redis
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

ext { // (5)
    snippetsDir = file('build/generated-snippets/')
    outputDir = file('build/docs/asciidoc')
}

test { // (6)
    outputs.dir snippetsDir
}

asciidoctor { // (7)
    inputs.dir snippetsDir // (8)
    configurations 'asciidoctorExt' // (9)
    dependsOn test // (10) // REST Docs가 생성되기 전에 테스트를 실행
    baseDirFollowsSourceDir() // (11)
}
// static/docs 폴더 비우기
asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) { // (12)
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build { // (13)
    dependsOn copyDocument
}

bootJar { // (14)
    dependsOn copyDocument
    from ("${asciidoctor.outputDir}") {
        into 'src/main/resources/static/docs'
    }
}